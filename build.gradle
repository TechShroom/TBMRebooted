buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "http://techshroom.github.io/downloads/maven"
        }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    
    configurations.all {
        resolutionStrategy {
            cacheChangingModulesFor 0, 'seconds'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath group: 'com.techshroom', name: 'Aversion', version: '1.0.1-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'aversion-apt'
apply plugin: 'aversion-maven'
apply plugin: 'aversion-util'

util {
    javaVersion = '1.8'
}

idea.project.languageLevel = util.javaVersion

repositories {
    mavenCentral()
    maven {
        name "central snapshots"
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}
group = "com.techshroom"
archivesBaseName = "TBM"

ext.configFile = file "build.properties"
configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

dependencies {

    compile group: 'com.flowpowered', name: 'flow-math', version: '1.0.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.0.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.0.2'
    compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '4.7'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.3'
    addAPTReqWComp group: 'com.google.guava', name: 'guava', version: '18.0'
    addAPT group: 'com.google.auto.factory', name: 'auto-factory', version: '1.0-SNAPSHOT'
    addAPT group: 'com.google.auto.service', name: 'auto-service', version: '1.0-SNAPSHOT'
    addAPT group: 'com.google.auto.value', name: 'auto-value', version: '1.2-SNAPSHOT'
    addAPTReq name: 'aopalliance'
    addAPTReq name: 'asm'
    addAPTReq name: 'auto-value'
    addAPTReq name: 'auto-common'
    addAPTReq name: 'cglib'
    addAPTReq name: 'commons-collections'
    addAPTReq name: 'commons-lang'
    addAPTReq name: 'dagger'
    addAPTReq name: 'javawriter'
    addAPTReq name: 'javax.inject'
    addAPTReq name: 'velocity'

    testCompile group: 'junit', name: 'junit', version: '4.+'
}

def build_number = (System.getenv("BUILD_NUMBER") ?: null)
// VERSION IS:
// <MOD_VERSION>+<MC_VERSION>-<BUILD_META>-build#<BUILD_NUMBER (if present)>
// This ensures that it is easy to identify what MC version the mod is for
version =  "${project.config.mod.version}+${project.config.mc.version}-${project.config.mod.buildmeta}" +
                (build_number ? "-build#" + build_number : "")
minecraft {
    version = config.mc.version + "-" + config.forge.version
    if (file('../run').exists()) {
        runDir = "../run"
    } else {
        runDir = "run"
    }
    replace '@VERSION@': version
    replace '@MC_VERSION@': config.mc.version
    replace '@FORGE_VERSION@': config.forge.version
    mappings "snapshot_20160207"
}

// did u know that AT checking is bad
[tasks.deobfMcMCP, tasks.deobfMcSRG].each { it.failOnAtError = false }

